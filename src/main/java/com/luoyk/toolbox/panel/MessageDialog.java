package com.luoyk.toolbox.panel;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.luoyk.toolbox.utils.ImageLoader;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionListener;

public class MessageDialog extends JDialog {
    private JPanel panel;
    private JButton confirm;
    private JButton cancel;
    private JLabel message;

    private ActionListener confirmActionListener;
    private ActionListener cancelActionListener;

    public static MessageDialog showDialog(String message) {
        MessageDialog messageDialog = new MessageDialog();
        messageDialog.message.setText(message);
        messageDialog.init();
        return messageDialog;
    }

    public static MessageDialog showDialog(String message, String confirmStr, String cancelStr) {
        MessageDialog messageDialog = new MessageDialog();
        messageDialog.message.setText(message);
        messageDialog.confirm.setText(confirmStr);
        messageDialog.cancel.setText(cancelStr);
        messageDialog.init();
        return messageDialog;
    }

    public static MessageDialog newDialog(String message) {
        MessageDialog messageDialog = new MessageDialog();
        messageDialog.message.setText(message);
        return messageDialog;
    }

    public static MessageDialog newDialog(String message, String confirmStr, String cancelStr) {
        MessageDialog messageDialog = new MessageDialog();
        messageDialog.message.setText(message);
        messageDialog.confirm.setText(confirmStr);
        messageDialog.cancel.setText(cancelStr);
        return messageDialog;
    }

    public MessageDialog setConfirmActionListener(ActionListener confirmActionListener) {
        if (this.confirmActionListener != null) {
            confirm.removeActionListener(this.confirmActionListener);
        }
        this.confirmActionListener = confirmActionListener;
        confirm.addActionListener(this.confirmActionListener);
        return this;
    }

    public MessageDialog setCancelActionListener(ActionListener cancelActionListener) {
        if (this.cancelActionListener != null) {
            cancel.removeActionListener(this.cancelActionListener);
        }
        this.cancelActionListener = cancelActionListener;
        cancel.addActionListener(this.cancelActionListener);
        return this;
    }

    private MessageDialog() {
    }

    public void init() {
        setIconImage(ImageLoader.load(ImageLoader.MAIN_INFO).size32().getImage());
        setContentPane(panel);
        setModal(true);
        ActionListener actionListener = e -> this.dispose();
        this.confirm.addActionListener(actionListener);
        this.cancel.addActionListener(actionListener);
        this.pack();
        this.setLocationRelativeTo(null);
        this.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new BorderLayout(0, 0));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel.add(panel1, BorderLayout.SOUTH);
        confirm = new JButton();
        confirm.setText("确定");
        panel1.add(confirm);
        cancel = new JButton();
        cancel.setText("取消");
        panel1.add(cancel);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(3, 3, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel2, BorderLayout.CENTER);
        message = new JLabel();
        message.setText("消息");
        panel2.add(message, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel2.add(spacer1, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        panel2.add(spacer2, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        panel2.add(spacer3, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        panel2.add(spacer4, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
